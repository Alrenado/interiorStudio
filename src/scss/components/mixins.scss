@use '../components/variables';
@use "sass:math";

@mixin font($family: 'Montserrat',$weight: 300, $style: normal, $filename: 'Montserrat-Light'){
  font-family: $family;
  font-weight: $weight;
  font-style: $style;
  font-display: swap;
  src:
          url('../fonts/#{$filename}.woff2') format('woff2'),
          url('../fonts/#{$filename}.woff') format('woff');
}

@function strip-unit($value) {
  @if type-of($value) == "number" and not unitless($value) {
    @return math.div($value, ($value * 0 + 1));
  }
  @return $value;
}

@function get-unit($value) {
  @if type-of($value) == "number" {
    @return math.unit($value);
  }
  @return null;
}

@mixin fontInit(
  $family: 'Montserrat',
  $alt: 'sans-serif',
  $font-weight: 400,
  $font-size: 1rem,
  $font-scale: 0.2,
  $min-width: 375px,
  $max-width: 1440px
){
  font-family: $family, $alt;
  font-weight: $font-weight;

  $unit: get-unit($font-size);
  $base: strip-unit($font-size);
  $min: $base * (1 - $font-scale);

  font-size: clamp(
          #{$min}#{$unit},
          calc(#{$min}#{$unit} + (#{$base - $min}) * ((100vw - #{strip-unit($min-width)}px) / #{strip-unit($max-width - $min-width)})),
          #{$base}#{$unit}
  );
}

@mixin media-breakpoint-down($name) {
  $value: variables.breakpoint($name);
  @media (max-width: $value) {
    @content;
  }
}

@mixin media-breakpoint-up($name) {
  $value: variables.breakpoint($name);
  @media (min-width: $value) {
    @content;
  }
}

@mixin media-breakpoint-between($lower, $upper) {
  $min: variables.breakpoint($lower);
  $max: variables.breakpoint($upper);

  @media (min-width: $min) and (max-width: $max) {
    @content;
  }
}